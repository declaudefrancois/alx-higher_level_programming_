Tests case for the functi def lazy_matrix_mul(m_a, m_b):
==============================================

Should give the correct output, given correct args
--------------------------------------------------
>>> fn = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> fn ([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

>>> fn ([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])

>>> fn ([[1, 2, 8], [7, 2, 5.6], [1, 1, 1]], [[3, 4, 4], [5, 6, 4], [7, 8, 9]])
array([[69. , 80. , 84. ],
       [70.2, 84.8, 86.4],
       [15. , 18. , 17. ]])

Should raise exception if m_a or m_b is empty
----------------------------------------------
>>> m_a = []
>>> m_b = [[1]]
>>> fn (m_a, m_b)
Traceback (most recent call last):
ValueError: shapes (0,) and (1,1) not aligned: 0 (dim 0) != 1 (dim 0)

>>> fn (m_b, m_a)
Traceback (most recent call last):
ValueError: shapes (1,1) and (0,) not aligned: 1 (dim 1) != 0 (dim 0)

>>> m_a = [[]]
>>> fn (m_a, m_b)
Traceback (most recent call last):
ValueError: shapes (1,0) and (1,1) not aligned: 0 (dim 1) != 1 (dim 0)

>>> fn (m_b, m_a)
array([], shape=(1, 0), dtype=int64)

Should raise error if m_a or m_b is not a list 
of list of int or float
------------------------------------------------------
>>> m_a = [1]
>>> fn (m_a, m_b)
array([1])

>>> fn (m_b, m_a)
array([1])

>>> m_a = [[1, 3], [2, 2]]
>>> m_b = (1,)
>>> fn (m_a, m_b)
Traceback (most recent call last):
ValueError: shapes (2,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)

>>> fn (m_b, m_a)
Traceback (most recent call last):
ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

>>> m_a = [[1, "a"], [[1]]]
>>> fn (m_a, m_b)
Traceback (most recent call last):
ValueError: setting an array element with a sequence

>>> m_b = [[1, 2], [1, 3]]
>>> fn (m_b, m_a)
Traceback (most recent call last):
ValueError: setting an array element with a sequence

Should raise error if each row of m_a or m_b
are not of the same size
--------------------------------------------

>>> m_a = [[1, 2], [1, 2, 3], [1]]
>>> m_b = [[1, 2], [1, 2]]
>>> fn (m_a, m_b)
Traceback (most recent call last):
ValueError: setting an array element with a sequence.

>>> fn (m_b, m_a)
Traceback (most recent call last):
ValueError: setting an array element with a sequence.

Should raise exception if the number of columns in the
first matrix is not equal to the number of rows in the second matrix
--------------------------------------------------------------------

>>> m_a = [[1,2], [3, 4]]
>>> m_b = [[1, 3, 4]]
>>> fn (m_a, m_b)
Traceback (most recent call last):
ValueError: shapes (2,2) and (1,3) not aligned: 2 (dim 1) != 1 (dim 0)

Should raise exception if arg not given
--------------------------------------

>>> fn ([])
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
